<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 36</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AADF/h9Xu0CierrWmgAAAABJRU5ErkJggg==
</value>
  </data>
</root>